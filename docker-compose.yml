
services:
  app:
    container_name: flicktrack-app
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run dev
    ports:
      - "9002:9002"
    depends_on:
      cache:
        condition: service_started
      # recommendation-engine:
      #   condition: service_started
    volumes:
      - ./:/app
      - /app/node_modules
    environment:
      - REDIS_URL=redis://cache:6379
      - DATABASE_URL=${DATABASE_URL}
      - TMDB_API_KEY=${TMDB_API_KEY}
      - NEXT_PUBLIC_SITE_URL=http://localhost:9002
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - PORT=9002
      - NODE_TLS_REJECT_UNAUTHORIZED=0
    env_file:
      - .env

  cache:
    container_name: flicktrack-cache
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  recommendation-engine:
    container_name: flicktrack-recommendation-engine
    build:
      context: ./recommendation-engine
      dockerfile: Dockerfile
    ports:
      - "8005:8000"
    volumes:
      - ./recommendation-engine:/app
      - processed_data:/app/processed_data
    # depends_on:
    #   data-pipeline:
    #     condition: service_completed_successfully

  # data-pipeline:
  #   container_name: flicktrack-data-pipeline
  #   build:
  #     context: ./data-pipeline-pyspark
  #     dockerfile: Dockerfile
  #   volumes:
  #     - processed_data:/app/processed_data

volumes:
  redis_data:
  processed_data:
