generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id
  email       String       @unique
  name        String?
  journal     JournalEntry[]
  watchlist   WatchlistItem[]
  lists       FilmList[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Film {
  id            Int             @id
  title         String
  overview      String?
  posterPath    String?
  releaseDate   String?
  voteAverage   Float?
  journalEntries JournalEntry[]
  watchlistItems WatchlistItem[]
  lists         FilmOnList[]
}

model JournalEntry {
  id         Int      @id @default(autoincrement())
  userId     String
  filmId     Int
  rating     Float
  review     String?
  loggedDate DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  film       Film     @relation(fields: [filmId], references: [id])

  @@unique([userId, filmId, loggedDate])
}

model WatchlistItem {
  id        Int      @id @default(autoincrement())
  userId    String
  filmId    Int
  addedAt   DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  film      Film     @relation(fields: [filmId], references: [id])

  @@unique([userId, filmId])
}

model FilmList {
  id          String       @id @default(cuid())
  userId      String
  name        String
  description String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  films       FilmOnList[]
}

model FilmOnList {
  listId    String
  filmId    Int
  addedAt   DateTime @default(now())
  list      FilmList @relation(fields: [listId], references: [id], onDelete: Cascade)
  film      Film     @relation(fields: [filmId], references: [id])

  @@id([listId, filmId])
}
